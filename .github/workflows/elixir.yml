name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Setup elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: 1.10.2 # Define the elixir version [required]
        otp-version: 22.2.8 # Define the OTP version [required]

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache #id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp-version }}-${{ matrix.elixir-version }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    
    - name: Install Mix Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    
    - name: Check Formatting
      run: mix format --check-formatted
    
    - name: Run Credo
      run: mix credo --strict
    
    - name: Run Tests
      run: mix test
    
    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp-version }}-${{ matrix.elixir-version }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    
    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        MIX_ENV=test mix dialyzer --plt
    
    - name: Run dialyzer
      run: MIX_ENV=test mix dialyzer --no-check --halt-exit-status
